{"_id":"r1ShTnnFb","title":" Lesson 4 (1): Collection Basics","body":{"blocks":[{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":32,"offset":0,"style":"BOLD"}],"key":"ag6qs","text":" Lesson 4 (1): Collection Basics","type":"header-one"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":7,"offset":0,"style":"BOLD"}],"key":"4mg6s","text":"Strings","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"dml35","text":"Collections are made up of individual elements. In order to work with collections we need to understand how they are structured and how to reference and assign the invidiual items within them.\nStrings use an integer-based index that represents each character in the string. The index starts counting at 0.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"75l55","text":"str = 'abcdefghi'\nstr[2] # => \"c\"","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"4alq2","text":"You can also reference multiple characters within a string by using an index strating point and the number of characters to return.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"3423o","text":"str[2,3] # => \"cde\"","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"46e6k","text":"Methods in ruby always have a return value.When we call a method, then we can use method chaining to call another method on the return value. ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"be0ts","text":"str[2,3][0] # => \"c\"","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"c486i","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":23,"style":"ITALIC"}],"key":"8nceb","text":"How would you reference 'grass' from within this string?","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"52eu0","text":"str = 'The grass is green'\n#answer\nstr[4,5] # => \"grass\"\n#or\nstr.slice(4,5) # => \"grass\"","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"aa00","text":"========================================================================================================\n","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":6,"offset":0,"style":"BOLD"}],"key":"ab2ej","text":"Arrays","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bhlgh","text":"Like strings, arrays are also ordered, zero-indexed collections.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"lp5t","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5uell","text":"What is returned here?","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"einbg","text":"arr = ['a','b','c','d','e','f','g']\narr = [2,3] #=> [\"c\",\"d\",\"e\"]\narr = [2,3][0] #=> \"c\"","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":22,"offset":0,"style":"BOLD"}],"key":"acac1","text":"Hash Element Reference","type":"header-one"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":10,"offset":208,"style":"BOLD"},{"length":7,"offset":398,"style":"BOLD"}],"key":"fist2","text":"========================================================================================================Hashes are another common collection data structure that, instead of using an integer-based index, uses key-value pairs, where the key or the value can be any type of ruby object. This allows for more expansive and descriptive collection of elements.\nWhen initializing a hash, the keys must be unique.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"8n399","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"94bvt","text":"What happens here?","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"c3r3s","text":"hsh = { 'fruit' => 'apple', 'vegetable' => 'carrot', 'fruit' => 'pear' }\n#(irb):1: warning: key :fruit is duplicated and overwritten on line 1\n#Our hash ends up with only two-key value pairs. The first one is over-written by the third as they have identical keys.","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":4,"offset":7,"style":"BOLD"},{"length":10,"offset":14,"style":"BOLD"}],"key":"9ah7d","text":"Values can be duplicated.\n========================================================================================================","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":25,"offset":0,"style":"BOLD"}],"key":"frt72","text":"Element Reference Gotchas","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":21,"offset":0,"style":"BOLD"},{"length":21,"offset":0,"style":"ITALIC"}],"key":"7ujrr","text":"Out of Bounds Indices","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":3,"offset":45,"style":"BOLD"},{"length":5,"offset":109,"style":"BOLD"},{"length":4,"offset":157,"style":"BOLD"},{"length":4,"offset":242,"style":"BOLD"},{"length":5,"offset":351,"style":"BOLD"},{"length":7,"offset":457,"style":"BOLD"},{"length":3,"offset":487,"style":"BOLD"}],"key":"90r1b","text":"Referencing an out of bounds index returns a nil. This is not necessarily a problem with strings, as we know nil  is an invalid return value. WIth an array, nil could be a return value since arrays contain any other type of object, including nil.So how do we tell when a return value is valid or an out-of-bounds reference?\nArray has a method called #fetch which, throws an IndexError exception if the referenced index lies out outside of the array bounds.\n#fetch  is better to use than #[] since it enforces array boundaries.\n","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":16,"offset":0,"style":"BOLD"},{"length":16,"offset":0,"style":"ITALIC"}],"key":"1tp5a","text":"Negative Indices","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"edlu6","text":"What happens when referencing an element with an index less than 0?","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"e2rah","text":"str = 'abcde'\narr = ['a','b','c','d','e']\n\n\nstr[-2] # => \"d\"\narr[-2] # => \"d\"","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":2,"offset":127,"style":"BOLD"}],"key":"9o41","text":"Elements in String and Array objects can be referenced within negative indices, starting from the last index in the collection -1 and working backwards.\n","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"74e6b","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"20po8","text":"What is returned?","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"4d1ub","text":"str = 'ghijk'\narr = ['g','h','i','j','k']\n\n\nstr[-6] #=> nil\narr[-6] #=> nil","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":17,"offset":0,"style":"BOLD"},{"length":17,"offset":0,"style":"ITALIC"}],"key":"dnhob","text":"Invalid Hash Keys","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":5,"offset":0,"style":"BOLD"},{"length":6,"offset":16,"style":"BOLD"}],"key":"cljr0","text":"Hash also has a #fetch method which can be useful when trying to disambiguate valid hash keys with a nil value from invalid hash keys.A KeyError gets returned if a key is not found. It is important to use the same type of object in the key when referencing.\n========================================================================================================","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":10,"offset":0,"style":"BOLD"}],"key":"be9mj","text":"Conversion","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":13,"offset":195,"style":"BOLD"}],"key":"89qfv","text":"With strings and arrays sharing similarities, such as both being zero-indexed collections, lends itself to being able to convert from one to the other, and is quite common practise in Ruby code.\nString#chars returns an array of individual characters.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ch12c","text":"str = 'Practice'\narr = str.chars # => [\"P\", \"r\", \"a\", \"c\", \"t\", \"i\", \"c\", \"e\"]\narr.join #=> \"Practise\n#arr.join returns a string with elements of the array joined together","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"2dfnk","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ciiv6","text":"Can you think of a couple of waysd in which the items in the array can be  joined together so that the results resembles the original string?","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"62jah","text":"str = 'How do you get to Carnegie Hall?'\narr = str.split # => [\"How\", \"do\", \"you\", \"get\", \"to\", \"Carnegie\", \"Hall?\"]\narr.join        # => \"HowdoyougettoCarnegieHall?\"\n############################################\narr.join(' ')","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":5,"offset":11,"style":"BOLD"}],"key":"3telf","text":"Hash has a #to_a method which returns an array.","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bl5rt","text":"hsh = { sky: \"blue\", grass: \"green\" }\nhsh.to_a # => [[:sky, \"blue\"], [:grass, \"green\"]]","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"b6iko","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":5,"offset":12,"style":"BOLD"}],"key":"eeneu","text":"Array has a #to_h method. What would happen with the following code?","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"74sir","text":"arr = [[:name, 'Joe'], [:age, 10], [:favorite_color, 'blue']]\narr.to_h #=> {:name => \"Joe\", age => 10, favorite_color => \"blue\"}","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"3t2pa","text":"========================================================================================================","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":14,"offset":0,"style":"BOLD"}],"key":"6ed05","text":"Element Assign","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":25,"offset":0,"style":"BOLD"},{"length":25,"offset":0,"style":"ITALIC"}],"key":"anliu","text":"String Element Assignment","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":6,"offset":46,"style":"BOLD"}],"key":"d6hv2","text":"We can use the element assignment notation of String in order to change the value of a specific character in a string by its index.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5nm18","text":"str = \"joe's favorite color is blue\"\nstr[0] = 'J'\n# str => \"Joe's favorite color is blue\"","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"9t502","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"4ckm","text":"Using the same element assignment method, how would you change the first letter of the remaining words in the sentence to their uppercase versions? Try it out in a code file or in irb","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"6iqpq","text":"str[6] = 'F'\nstr[15] = 'C'\nstr[21] = 'I'\nstr[24] = 'B'","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":24,"offset":0,"style":"BOLD"},{"length":24,"offset":0,"style":"ITALIC"}],"key":"6jssi","text":"Array Element Assignment","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bpup2","text":"We can assign elements of an array similar to a String.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"8stt","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"bness","text":"Increase the following values in the array by 1.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5su92","text":"arr = [1, 2, 3, 4, 5]\narr[0] +=1\narr[1] +=1\narr[2] +=1\narr[3] +=1\narr[4] +=1","type":"custom-code-block-ruby"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":23,"offset":0,"style":"BOLD"},{"length":23,"offset":0,"style":"ITALIC"}],"key":"6u159","text":"Hash Element Assignment","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"atdkl","text":"Hash element assignment uses key","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[{"length":8,"offset":0,"style":"BOLD"},{"length":8,"offset":0,"style":"ITALIC"}],"key":"akssv","text":"Question","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"5r1td","text":"Set the value of 'fruit' or 'vegetable' to each element in the hash.","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"fu54a","text":"hsh = { apple: 'Produce', carrot: 'Produce', pear: 'Produce', broccoli: 'Produce' }\nhsh[:apple] = 'Fruit'\nhsh[:carrot] = 'Vegetable'\nhsh[:pear] = 'Fruit'\nhsh[:broccoli] = 'Vegetable'","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"8d0n","text":" ","type":"unstyled"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"59kd9","text":"","type":"unstyled"}],"entityMap":{}},"dateCreated":"2017-09-06T00:13:32.861Z","lastUpdated":"2017-09-06T00:16:37.001Z"}
